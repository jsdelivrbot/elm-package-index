[{"name":"Keccak","comment":"\n\nImplementation by the [Keccak](http://keccak.noekeon.org/), [Keyak](http://keyak.noekeon.org/) and [Ketje](http://ketje.noekeon.org/) Teams, namely, Guido Bertoni,\nJoan Daemen, MichaÃ«l Peeters, Gilles Van Assche and Ronny Van Keer, hereby\ndenoted as \"the implementer\".\n\nFor more information, feedback or questions, please refer to our websites:\n\n\n\n\nTo the extent possible under law, the implementer has waived all copyright\nand related or neighboring rights to the source code in this file.\nhttp://creativecommons.org/publicdomain/zero/1.0/\n\nPorted to elm by Art Yerkes.\n\nethereum_keccak_256 is the hash function used in many places related to the\nethereum cryptocurrency.  It is different from sha3 in the padding used.\n\nElm 0.19 update by Coury Ditch\nhttps://github.com/cmditch\n\n# Functions\n@docs fips202_sha3_224, fips202_sha3_256, fips202_sha3_384, fips202_sha3_512, ethereum_keccak_256\n\n","unions":[],"aliases":[],"values":[{"name":"ethereum_keccak_256","comment":"\n  Compute the ethereum style 256-bit hash of a list of byte width integers (0-255)\n  as a list of byte width integers.\n","type":"List.List Basics.Int -> List.List Basics.Int"},{"name":"fips202_sha3_224","comment":"\n  Compute the sha3 224 of a list of byte width integers (0-255) as a list of\n  byte width integers.\n","type":"List.List Basics.Int -> List.List Basics.Int"},{"name":"fips202_sha3_256","comment":"\n  Compute the sha3 256 of a list of byte width integers (0-255) as a list of\n  byte width integers.\n","type":"List.List Basics.Int -> List.List Basics.Int"},{"name":"fips202_sha3_384","comment":"\n  Compute the sha3 384 of a list of byte width integers (0-255) as a list of\n  byte width integers.\n","type":"List.List Basics.Int -> List.List Basics.Int"},{"name":"fips202_sha3_512","comment":"\n  Compute the sha3 512 of a list of byte width integers (0-255) as a list of\n  byte width integers.\n","type":"List.List Basics.Int -> List.List Basics.Int"}],"binops":[]}]