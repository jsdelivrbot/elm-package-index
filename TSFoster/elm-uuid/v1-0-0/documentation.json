[{"name":"UUID","comment":" A module defining UUIDs in the general, and providing functions for encoding, decoding and formatting UUIDs.\n\n@docs UUID, Version4, Variant1, Variant2, Nil, nil\n\n\n## JSON\n\n@docs encode, decoder\n\n\n## Formatting\n\n@docs canonical, microsoftGUID, urn\n\n","unions":[],"aliases":[{"name":"Nil","comment":" Used to denote version and variant of the nil UUID.\n","args":[],"type":"Internal.UUID.Nil"},{"name":"UUID","comment":" Opaque type to encapsulate UUIDs. Uses [phantom types](https://medium.com/@ckoster22/advanced-types-in-elm-phantom-types-808044c5946d) to provide information about version and variant.\n","args":["version","variant"],"type":"Internal.UUID.UUID version variant"},{"name":"Variant1","comment":" Used to denote variation of variation 1 UUIDs.\n","args":[],"type":"Internal.UUID.Variant1"},{"name":"Variant2","comment":" Used to denote variation of variation 2 UUIDs.\n","args":[],"type":"Internal.UUID.Variant2"},{"name":"Version4","comment":" Used to denote version of version 4 UUIDs.\n","args":[],"type":"Internal.UUID.Version4"}],"values":[{"name":"canonical","comment":" Convert UUID to [canonical textual representation](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)\n","type":"UUID.UUID version variant -> String.String"},{"name":"decoder","comment":" Decodes a UUID of any version or variant from a JSON string.\n","type":"Json.Decode.Decoder (UUID.UUID version variant)"},{"name":"encode","comment":" Encode a UUID of any version or variant as a JSON string.\n","type":"UUID.UUID version variant -> Json.Encode.Value"},{"name":"microsoftGUID","comment":" Convert UUID to [Microsoft GUID representation](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)\n","type":"UUID.UUID version variant -> String.String"},{"name":"nil","comment":" The nil UUID. This is the special UUID \"00000000-0000-0000-0000-000000000000\".\n","type":"UUID.UUID UUID.Nil UUID.Nil"},{"name":"urn","comment":" Convert UUID to [URN-namespaced representation](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)\n","type":"UUID.UUID version variant -> String.String"}],"binops":[]},{"name":"UUID.Version4","comment":" Version 4 UUIDs are randomly-generated. To generate version 4 UUIDs, see [UUID.Version4.Variant1.generator](../UUID-Version4-Variant1#generator) or [UUID.Version4.Variant2.generator](../UUID-Version4-Variant2#generator).\n\n\n## JSON\n\n@docs encode, decoder\n\n","unions":[],"aliases":[],"values":[{"name":"decoder","comment":" Decodes a version 4 UUID of any variant from a JSON string.\n","type":"Json.Decode.Decoder (UUID.UUID UUID.Version4 variant)"},{"name":"encode","comment":" Encode a version 4 UUID of any variant as a JSON string.\n","type":"UUID.UUID UUID.Version4 variant -> Json.Encode.Value"}],"binops":[]},{"name":"UUID.Version4.Variant1","comment":" Variant 1 version 4 UUIDs provide 122 bits of randomness.\n\n\n## Generating\n\n@docs generator\n\n\n## JSON\n\n@docs encode, decoder\n\n","unions":[],"aliases":[],"values":[{"name":"decoder","comment":" Decodes a UUID from a JSON string. Fails if UUID is not version 4 or variant 1.\n","type":"Json.Decode.Decoder (UUID.UUID UUID.Version4 UUID.Variant1)"},{"name":"encode","comment":" Encode a variant 1 version 4 UUID as a JSON string.\n","type":"UUID.UUID UUID.Version4 UUID.Variant1 -> Json.Encode.Value"},{"name":"generator","comment":" Generator for version 4 variant 1 UUIDs. See [elm-random](https://package.elm-lang.org/packages/elm/random/latest/) for more information on using Generators.\n","type":"Random.Generator (UUID.UUID UUID.Version4 UUID.Variant1)"}],"binops":[]},{"name":"UUID.Version4.Variant2","comment":" Variant 2 version 4 UUIDs provide 122 bits of randomness.\n\n\n## Generating\n\n@docs generator\n\n\n## JSON\n\n@docs encode, decoder\n\n","unions":[],"aliases":[],"values":[{"name":"decoder","comment":" Decodes a UUID from a JSON string. Fails if UUID is not version 4 or variant 2.\n","type":"Json.Decode.Decoder (UUID.UUID UUID.Version4 UUID.Variant2)"},{"name":"encode","comment":" Encode a variant 2 version 4 UUID as a JSON string.\n","type":"UUID.UUID UUID.Version4 UUID.Variant2 -> Json.Encode.Value"},{"name":"generator","comment":" Generator for version 4 variant 2 UUIDs. See [elm-random](https://package.elm-lang.org/packages/elm/random/latest/) for more information on using Generators.\n","type":"Random.Generator (UUID.UUID UUID.Version4 UUID.Variant2)"}],"binops":[]}]