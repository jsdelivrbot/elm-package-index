[{"name":"Toasters","comment":" Module to add Toasters to your app\n\n\n# Initialise and update\n\n@docs Model, init, Msg, update\n\n\n# Add to your view\n\n@docs view\n\n","unions":[{"name":"Model","comment":" Add a Toasters.Model to your model.\n\n    type alias MyModel =\n        { toasters : Toasters.Model\n        }\n\n","args":[],"cases":[]},{"name":"Msg","comment":" Add a Toasters.Msg to your Msg.\n\n    type MyMsg\n        = ToastersMsg Toasters.Msg\n\n","args":[],"cases":[]}],"aliases":[],"values":[{"name":"init","comment":" Add a Toasters.Model to your model.\n\n    myInitialModel : MyModel\n    myInitialModel =\n        { toasters = Toasters.init\n        }\n\n","type":"Toasters.Model"},{"name":"update","comment":" Use in your update function.\n\n    myUpdate : Msg -> Model -> ( Model, Cmd Msg )\n    myUpdate msg model =\n        case msg of\n            ToastersMsg toastersMsg ->\n                { model | toasters = Toasters.update toastersMsg model.toasters } ! []\n\n","type":"Toasters.Msg -> Toasters.Model -> Toasters.Model"},{"name":"view","comment":" Add to your view function.\n\n    div\n        []\n        [ Toasters.view model.toasters\n            |> Html.map ToastersMsg\n        , div\n            []\n            [ text \"My Cool App\" ]\n        ]\n\n","type":"Toasters.Model -> Html.Html Toasters.Msg"}],"binops":[]}]