[{"name":"Primes","comment":" Provides a lazy, infinite list of primes.\n\n\n# Definition\n\n@docs primes, LazyList\n\n\n# Helpers\n\n@docs take, isPrime\n\nThe following code snippets will result in the same list. Notice that with the `primes` example we do not need to know the upper bound.\n\n    take 50 primes\n\nreturns the same list as\n\n    List.filter isPrime <| List.range 2 230\n\n","unions":[{"name":"LazyList","comment":" A lazy list. Makes it possible to create infinite lists.\n","args":["a"],"cases":[]}],"aliases":[],"values":[{"name":"isPrime","comment":" Determines if the argument is prime. ","type":"Basics.Int -> Basics.Bool"},{"name":"primes","comment":" A lazy list of prime numbers.\n","type":"Primes.LazyList Basics.Int"},{"name":"take","comment":" Like `List.take` but for `LazyList`.\n","type":"Basics.Int -> Primes.LazyList a -> List.List a"}],"binops":[]},{"name":"RSA","comment":" The RSA crypto-system in Elm.\n\n\n# Constructors\n\n@docs generate, PrivateKey, PublicKey\n\n\n# Usage\n\n@docs encrypt, decrypt\n\n\n# Error Handling\n\n@docs GenerationError, errorString\n\n# Usage\n\n```elm\nlet\n    (public, private) = generate 37 79\nin\n    encrypt public value\n```\n\n","unions":[{"name":"GenerationError","comment":" The reason why a key-pair generation can go wrong. ","args":[],"cases":[]},{"name":"PrivateKey","comment":" The private keys of the RSA crypto-system.\n\nUses to `decrypt` a message. ","args":[],"cases":[]}],"aliases":[{"name":"PublicKey","comment":" The public keys of the RSA crypto-system.\n\nUsed to `encrypt` a message. ","args":[],"type":"{ n : Basics.Int, e : Basics.Int }"}],"values":[{"name":"decrypt","comment":" Decrypts a message. ","type":"RSA.PrivateKey -> Basics.Int -> Basics.Int"},{"name":"encrypt","comment":" Encrypts a message. ","type":"RSA.PublicKey -> Basics.Int -> Basics.Int"},{"name":"errorString","comment":" Returns a `String` detailing why the key-pair generation failed.  ","type":"RSA.GenerationError -> String.String"},{"name":"generate","comment":" Generates a key-pair for the RSA crypto-system.\n\nThe arguments should be two primes. Note that the primes should remain private. ","type":"Basics.Int -> Basics.Int -> Result.Result RSA.GenerationError ( RSA.PublicKey, RSA.PrivateKey )"}],"binops":[]}]