[{"name":"HSLuv","comment":" Convert color between HSLuv and RGB spaces\n\n\n# Create colors (constructors)\n\n@docs hsluv, hsluv360, rgb, rgb255\n\n\n# Convert colors (extractor)\n\n@docs toHsluv, toHsluv360, toRgb, toRgb255\n\n\n# Low level functions\n\n@docs hsluvToRgb, hpluvToRgb, rgbToHsluv, rgbToHpluv\n\n\n# Low level intermediate conversion functions\n\n@docs lchToLuv, luvToLch, xyzToRgb, rgbToXyz, xyzToLuv, luvToXyz\n@docs hsluvToLch, lchToHsluv, hpluvToLch, lchToHpluv\n\n","unions":[],"aliases":[],"values":[{"name":"hpluvToLch","comment":" `hpluvToLch` convert HPLuv components to LCH\n","type":"HSLuv.Vec3 -> HSLuv.Vec3"},{"name":"hpluvToRgb","comment":" `hpluvToRgb` convert HSLuv components to RGB\n","type":"HSLuv.Vec3 -> HSLuv.Vec3"},{"name":"hsluv","comment":" `hsluv` create a Color with normalized HSLuv\ncomponents (0->1) and an alpha channel\n","type":"{ hue : Basics.Float, saturation : Basics.Float, lightness : Basics.Float, alpha : Basics.Float } -> HSLuv.Color.Color"},{"name":"hsluv360","comment":" `hsluv360` create a Color with HSLuv\ncomponents and an alpha channel\n\n    - hue range is 0->360\n    - saturation range is 0->100\n    - lightness range is 0->100\n    - alpha range is 0->1\n\n","type":"{ hue : Basics.Float, saturation : Basics.Float, lightness : Basics.Float, alpha : Basics.Float } -> HSLuv.Color.Color"},{"name":"hsluvToLch","comment":" `hsluvToLch` convert HSLuv components to LCH\n","type":"HSLuv.Vec3 -> HSLuv.Vec3"},{"name":"hsluvToRgb","comment":" `hsluvToRgb` convert HSLuv components to RGB\n","type":"HSLuv.Vec3 -> HSLuv.Vec3"},{"name":"lchToHpluv","comment":" `lchToHpluv` convert LCH components to HPLuv\n","type":"HSLuv.Vec3 -> HSLuv.Vec3"},{"name":"lchToHsluv","comment":" `lchToHsluv` convert LCH components to HSLuv\n","type":"HSLuv.Vec3 -> HSLuv.Vec3"},{"name":"lchToLuv","comment":" `lchToLuv` convert LCH components to LUV\n","type":"HSLuv.Vec3 -> HSLuv.Vec3"},{"name":"luvToLch","comment":" `luvToLch` convert LUV components to LCH\n","type":"HSLuv.Vec3 -> HSLuv.Vec3"},{"name":"luvToXyz","comment":" `luvToXyz` convert LUV components to XYZ\n","type":"HSLuv.Vec3 -> HSLuv.Vec3"},{"name":"rgb","comment":" `rgb` create a Color with normalized RGB components (0->1)\nand an alpha channel\n","type":"{ red : Basics.Float, green : Basics.Float, blue : Basics.Float, alpha : Basics.Float } -> HSLuv.Color.Color"},{"name":"rgb255","comment":" `rgb255` create a Color with RGB components (0->255) and an alpha channel (0->1)\n","type":"{ red : Basics.Int, green : Basics.Int, blue : Basics.Int, alpha : Basics.Float } -> HSLuv.Color.Color"},{"name":"rgbToHpluv","comment":" `rgbToHpluv` convert RGB components to HSLuv\n","type":"HSLuv.Vec3 -> HSLuv.Vec3"},{"name":"rgbToHsluv","comment":" `rgbToHsluv` convert RGB components to HSLuv\n","type":"HSLuv.Vec3 -> HSLuv.Vec3"},{"name":"rgbToXyz","comment":" `rgbToXyz` convert RGB components to XYZ\n","type":"HSLuv.Vec3 -> HSLuv.Vec3"},{"name":"toHsluv","comment":" `toHsluv` extract the normalized components of a color in the HSLuv format\n","type":"HSLuv.Color.Color -> { hue : Basics.Float, saturation : Basics.Float, lightness : Basics.Float, alpha : Basics.Float }"},{"name":"toHsluv360","comment":" `toHsluv360` extract the components of a color in the HSLuv format\n\n    - hue range is 0->360\n    - saturation range is 0->100\n    - lightness range is 0->100\n    - alpha range is 0->1\n\n","type":"HSLuv.Color.Color -> { hue : Basics.Float, saturation : Basics.Float, lightness : Basics.Float, alpha : Basics.Float }"},{"name":"toRgb","comment":" `toRgb` extract the normalized components of a color in the RGBA format\n","type":"HSLuv.Color.Color -> { red : Basics.Float, green : Basics.Float, blue : Basics.Float, alpha : Basics.Float }"},{"name":"toRgb255","comment":" `toRgb255` extract the components of a color in the RGBA format (0->255)\n","type":"HSLuv.Color.Color -> { red : Basics.Int, green : Basics.Int, blue : Basics.Int, alpha : Basics.Float }"},{"name":"xyzToLuv","comment":" `xyzToLuv` convert XYZ components to LUV\n","type":"HSLuv.Vec3 -> HSLuv.Vec3"},{"name":"xyzToRgb","comment":" `xyzToRgb` convert XYZ components to RGB\n","type":"HSLuv.Vec3 -> HSLuv.Vec3"}],"binops":[]}]