[
  {
    "name": "SelectList.Extra",
    "comment": " A library of SelectList helpers.\r\n\r\n# Helpers\r\n@docs step, fromList, selectAt\r\n\r\n# Types\r\n@docs StepDirection\r\n",
    "aliases": [],
    "types": [
      {
        "name": "StepDirection",
        "comment": " Step direction used with step function. \r\n",
        "args": [],
        "cases": [
          [
            "Forwards",
            []
          ],
          [
            "Backwards",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "fromList",
        "comment": " Build a select list from a single list and a selected element.\r\nIf the provided element is not in the list, returns Nothing. \r\n\r\n    sList = fromList \"b\" [\"a\", \"b\", \"c\"] --[\"a\"] \"b\" [\"c\"]\r\n    sList = fromList \"z\" [\"a\", \"b\", \"c\"] --Nothing\r\n\r\n ",
        "type": "a -> List a -> Maybe.Maybe (SelectList.SelectList a)"
      },
      {
        "name": "selectAt",
        "comment": " Select the element at the given index. \r\nreturns unchaged select list if index is invalid.\r\n\r\n    sList = fromLists [\"a\", \"b\", \"c\"] \"d\" []\r\n\r\n    selectAt -1 sList  -- [\"a\", \"b\", \"c\"] \"d\" []\r\n    selectAt 1 sList  -- [\"a\"] \"b\" [\"c\", \"d\"]\r\n ",
        "type": "Int -> SelectList.SelectList a -> SelectList.SelectList a"
      },
      {
        "name": "step",
        "comment": " Step your selection forwards (increment by one) or backwards (decrement by one) through your list.\r\nIf there are no more elements in the step direction, returns an unmodified select list.\r\n\r\n    sList = fromLists [\"a\", \"b\", \"c\"] \"d\" []\r\n    \r\n    step Forwards sList -- [\"a\", \"b\", \"c\"] \"d\" []\r\n    step Backwards sList  -- [\"a\", \"b\"] \"c\" [\"d\"]\r\n ",
        "type": "SelectList.Extra.StepDirection -> SelectList.SelectList a -> SelectList.SelectList a"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]