[{"name":"QRCode","comment":" QR Code encoding and rendering.\n\n@docs QRCode, ErrorCorrection\n\n\n# Encoding\n\n@docs encode, encodeWith\n\n\n# Rendering\n\n@docs toSvg, toString\n\n\n# Error\n\n@docs Error\n\n","unions":[{"name":"Error","comment":" Possible enconding errors.\n","args":[],"cases":[["AlignmentPatternNotFound",[]],["InvalidNumericChar",[]],["InvalidAlphanumericChar",[]],["InvalidUTF8Char",[]],["LogTableException",["Basics.Int"]],["PolynomialMultiplyException",[]],["PolynomialModException",[]],["InputLengthOverflow",[]]]},{"name":"ErrorCorrection","comment":" Error correction level. Provides the following error\ncorrection capability:\n\n  - **Low**: 7% of codewords can be restored.\n  - **Medium**: 15% of codewords can be restored.\n  - **Quartile**: 25% of codewords can be restored.\n  - **High**: 30% of codewords can be restored.\n\n","args":[],"cases":[["Low",[]],["Medium",[]],["Quartile",[]],["High",[]]]},{"name":"QRCode","comment":" QRCode type.\n","args":[],"cases":[]}],"aliases":[],"values":[{"name":"encode","comment":" Transform a string into a result [Error](#Error)\nor a [QRCode](#QRCode) using `Quartile` [ErrorCorrection](#ErrorCorrection).\n","type":"String.String -> Result.Result QRCode.Error QRCode.QRCode"},{"name":"encodeWith","comment":" Transform a string with a given [ErrorCorrection](#ErrorCorrection)\ninto a result [Error](#Error) or a [QRCode](#QRCode).\n","type":"QRCode.ErrorCorrection -> String.String -> Result.Result QRCode.Error QRCode.QRCode"},{"name":"toString","comment":" Transform a [QRCode](#QRCode) into a string.\n\n    \"Hello World!\"\n        |> QRCode.encode\n        |> Result.map QRCode.toString\n        |> Result.withDefault \"Error while encoding to QRCode.\"\n\nReturns:\n\n    ■■■■■■■ ■■■■  ■■■■■■■\n    ■     ■ ■■■■  ■     ■\n    ■ ■■■ ■ ■■■■■ ■ ■■■ ■\n    ■ ■■■ ■ ■   ■ ■ ■■■ ■\n    ■ ■■■ ■ ■■■■  ■ ■■■ ■\n    ■     ■    ■  ■     ■\n    ■■■■■■■ ■ ■ ■ ■■■■■■■\n            ■ ■■\n     ■■ ■ ■■  ■   ■ ■■■■■\n    ■■ ■■■   ■■■■ ■■■  ■■\n     ■ ■■ ■■ ■■■■■ ■■■■■■\n     ■■      ■■■■   ■  ■\n    ■  ■ ■■■  ■■■■ ■■\n            ■■ ■■■    ■■\n    ■■■■■■■ ■ ■    ■■ ■■■\n    ■     ■  ■  ■  ■    ■\n    ■ ■■■ ■ ■■■     ■\n    ■ ■■■ ■   ■■  ■■■ ■■\n    ■ ■■■ ■ ■ ■ ■ ■ ■ ■ ■\n    ■     ■ ■  ■    ■  ■\n    ■■■■■■■   ■■■  ■   ■■\n\n","type":"QRCode.QRCode -> String.String"},{"name":"toSvg","comment":" Transform a [QRCode](#QRCode) into a svg element.\n\n    qrCodeView : String -> Html msg\n    qrCodeView message =\n        QRCode.encode message\n            |> Result.map QRCode.toSvg\n            |> Result.withDefault\n                (Html.text \"Error while encoding to QRCode.\")\n\n**Tip**: You can determine the size of the generated svg setting\n`width` and `height` styles.\n\n","type":"QRCode.QRCode -> Html.Html msg"}],"binops":[]}]