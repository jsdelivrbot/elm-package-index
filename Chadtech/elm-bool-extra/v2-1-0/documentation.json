[{"name":"Bool.Extra","comment":" Convenience functions for working with Bools\n\n\n# Basics\n\n@docs all, none, any, notAll\n\n\n# Predicate\n\n@docs allPass, anyPass\n\n\n# Util\n\n@docs toString\n\n","unions":[],"aliases":[],"values":[{"name":"all","comment":" All the bools are true.\n\n    all [ True, True ] == True\n\n    all [ True, False ] == False\n\n    all [ False, False ] == False\n\n","type":"List.List Basics.Bool -> Basics.Bool"},{"name":"allPass","comment":" Determine if all predicates are satisfied by the value.\n\n    allPass [ (>) 20, (<) 10 ] 11 == True\n\n    allPass [ (>) 20, (<) 10 ] 21 == False\n\n    allPass [ (>) 20, (<) 10 ] 4 == False\n\n    allPass [] 21 == True\n\n","type":"List.List (a -> Basics.Bool) -> a -> Basics.Bool"},{"name":"any","comment":" At least one of the bools is true.\n\n    any [ True, True ] == True\n\n    any [ True, False ] == True\n\n    any [ False, False ] == False\n\n","type":"List.List Basics.Bool -> Basics.Bool"},{"name":"anyPass","comment":" Determine if any predicate is satisfied by the value.\n\n    anyPass [ (>) 20, (<) 10 ] 100 == True\n\n    anyPass [ (>) 20, (==) 10 ] 21 == False\n\n    anyPass [] 21 == False\n\n","type":"List.List (a -> Basics.Bool) -> a -> Basics.Bool"},{"name":"none","comment":" None of the bools are true.\n\n    none [ True, True ] == False\n\n    none [ True, False ] == False\n\n    none [ False, False ] == True\n\n","type":"List.List Basics.Bool -> Basics.Bool"},{"name":"notAll","comment":" Not all of them are true\n\n    notAll [ True, True ] == False\n\n    notAll [ True, False ] == True\n\n    notAll [ False, False ] == True\n\n","type":"List.List Basics.Bool -> Basics.Bool"},{"name":"toString","comment":" Turn a bool into a string\n\n    toString True == \"True\"\n\n    toString False == \"False\"\n\n","type":"Basics.Bool -> String.String"}],"binops":[]}]