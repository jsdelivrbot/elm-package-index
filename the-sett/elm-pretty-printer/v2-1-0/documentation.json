[{"name":"Pretty","comment":" Pretty printer.\n\n@docs Doc\n\n\n# Building documents from string data\n\n@docs empty, space, string, char\n\n\n# Joining documents together\n\n@docs append, a, join, lines, softlines, words, fold\n\n\n# Fitting documents onto lines\n\n@docs group, line, softline\n\n\n# Indenting and alinging documents\n\n@docs align, nest, hang, indent\n\n\n# Putting things around documents\n\n@docs surround, parens, braces, brackets\n\n\n# Pretty printing documents\n\n@docs pretty\n\n","unions":[{"name":"Doc","comment":" The type of documents that can be pretty printed.\n","args":[],"cases":[]}],"aliases":[],"values":[{"name":"a","comment":" Short hand notation for append.\nUsefull when appending multiple parts together:\n\n    string \"Hello\"\n      |> a space\n      |> a \"World\"\n      |> a (char '!')\n      |> a line\n\n","type":"Pretty.Doc -> Pretty.Doc -> Pretty.Doc"},{"name":"align","comment":" Adds an indent of the current column position to all line breaks in the document.\nThe first line will not be indented, only subsequent nested lines will be.\n","type":"Pretty.Doc -> Pretty.Doc"},{"name":"append","comment":" Appends two documents together.\n","type":"Pretty.Doc -> Pretty.Doc -> Pretty.Doc"},{"name":"braces","comment":" Wraps a document in braces.\n","type":"Pretty.Doc -> Pretty.Doc"},{"name":"brackets","comment":" Wraps a document in brackets.\n","type":"Pretty.Doc -> Pretty.Doc"},{"name":"char","comment":" Creates a document from a character.\n","type":"Char.Char -> Pretty.Doc"},{"name":"empty","comment":" Creates an empty document.\n\n    pretty 10 empty == \"\"\n\n","type":"Pretty.Doc"},{"name":"fold","comment":" Fold a list of documents from left to right using a given function.\n\n    fold f == List.foldl f empty\n\n","type":"(a -> Pretty.Doc -> Pretty.Doc) -> List.List a -> Pretty.Doc"},{"name":"group","comment":" Tries to fit a document on a single line, replacing line breaks with single spaces\nwhere possible to achieve this.\n","type":"Pretty.Doc -> Pretty.Doc"},{"name":"hang","comment":" Adds an indent of the current column position to all line breaks in the document and\na further indent of the specified number of columns.\nThe first line will not be indented, only subsequent nested lines will be.\n","type":"Basics.Int -> Pretty.Doc -> Pretty.Doc"},{"name":"indent","comment":" Indents a whole document by a given number of spaces.\n","type":"Basics.Int -> Pretty.Doc -> Pretty.Doc"},{"name":"join","comment":" Concatenates a list of documents together interspersed with a separator document.\n","type":"Pretty.Doc -> List.List Pretty.Doc -> Pretty.Doc"},{"name":"line","comment":" Creates a hard line break. This always creates a new line, with subsequent text\nat the current indentation level.\n","type":"Pretty.Doc"},{"name":"lines","comment":" Concatenate a list of documents together interspersed with lines.\nVery convenient when laying out lines after another:\n\n    lines\n      [ string \"Heading\"\n      , empty\n      , words [string \"First\", string \"paragraph\"]\n      ...\n      ]\n\n    ==\n\n    string \"Heading\"\n      |> a line\n      |> a line\n      |> a (string \"First\")\n      |> a space\n      |> a (string \"paragraph\")\n      ...\n\nSee also `words`.\n\n","type":"List.List Pretty.Doc -> Pretty.Doc"},{"name":"nest","comment":" Adds an indent of the given number of spaces to all line breakss in the document.\nThe first line will not be indented, only subsequent nested lines will be.\n","type":"Basics.Int -> Pretty.Doc -> Pretty.Doc"},{"name":"parens","comment":" Wraps a document in parnethesese\n","type":"Pretty.Doc -> Pretty.Doc"},{"name":"pretty","comment":" Pretty prints a document trying to fit it as best as possible to the specified\ncolumn width of the page.\n","type":"Basics.Int -> Pretty.Doc -> String.String"},{"name":"softline","comment":" Creates a line break that will render to a single space if the documents it\nsepartes can be fitted onto one line, or a line break otherwise.\n","type":"Pretty.Doc"},{"name":"softlines","comment":" Like `lines` but uses `softline` instaed.\n","type":"List.List Pretty.Doc -> Pretty.Doc"},{"name":"space","comment":" Creates a document consisting of a single space.\n","type":"Pretty.Doc"},{"name":"string","comment":" Creates a document from a string.\n","type":"String.String -> Pretty.Doc"},{"name":"surround","comment":" Places a document inside left and right book ends.\n\n    pretty 100 (surround (char '\\') (char '/') string \"hello\")\n      == \"\\hello/\"\n\n","type":"Pretty.Doc -> Pretty.Doc -> Pretty.Doc -> Pretty.Doc"},{"name":"words","comment":" Concatenate a list of documents together interspersed with spaces.\nVery convenient when laying out words after another.\n\nSee also `lines`.\n\n","type":"List.List Pretty.Doc -> Pretty.Doc"}],"binops":[]}]