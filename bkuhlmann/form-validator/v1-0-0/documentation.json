[
  {
    "name": "FormValidator",
    "comment": "\n\nA customizable form validation component.\n\n# Models\n\n@docs Form\n\n# Init\n\n@docs init\n\n# Accessors\n\n@docs fieldValues, fieldValue, fieldErrors\n\n# Updaters\n\n@docs updateValues, updateValue, updateAndValidateValues, updateAndValidateValue\n\n# Validators\n\n@docs validateForm, validateField, isFormInvalid, isFieldInvalid, isBlank, isEmpty, isInteger, isFloat, isIncluded, isExcluded, isGreaterThan, isLessThan, isBetween, isLengthGreaterThanEqualTo, isLengthLessThanEqualTo, isEmail\n\n# Views\n\n@docs viewField, viewErrors, viewError\n\n",
    "aliases": [
      {
        "name": "Form",
        "comment": " Models module wrapper. See Models module for details. ",
        "args": [
          "key"
        ],
        "type": "FormValidator.Models.Form key"
      }
    ],
    "types": [],
    "values": [
      {
        "name": "fieldErrors",
        "comment": " Validator module wrapper. See Validator module for details. ",
        "type": "key -> FormValidator.Models.Form key -> FormValidator.Models.Errors"
      },
      {
        "name": "fieldValue",
        "comment": " Validator module wrapper. See Validator module for details. ",
        "type": "key -> FormValidator.Models.Form key -> String"
      },
      {
        "name": "fieldValues",
        "comment": " Validator module wrapper. See Validator module for details. ",
        "type": "key -> FormValidator.Form key -> List String"
      },
      {
        "name": "init",
        "comment": " Validator module wrapper. See Validator module for details. ",
        "type": "key -> FormValidator.Models.Validators -> FormValidator.Models.Field key"
      },
      {
        "name": "isBetween",
        "comment": " Validators module wrapper. See Validators module for details. ",
        "type": "Int -> Int -> FormValidator.Models.Value -> FormValidator.Models.Error"
      },
      {
        "name": "isBlank",
        "comment": " Validators module wrapper. See Validators module for details. ",
        "type": "FormValidator.Models.Value -> FormValidator.Models.Error"
      },
      {
        "name": "isEmail",
        "comment": " Validators module wrapper. See Validators module for details. ",
        "type": "FormValidator.Models.Value -> FormValidator.Models.Error"
      },
      {
        "name": "isEmpty",
        "comment": " Validators module wrapper. See Validators module for details. ",
        "type": "FormValidator.Models.Value -> FormValidator.Models.Error"
      },
      {
        "name": "isExcluded",
        "comment": " Validators module wrapper. See Validators module for details. ",
        "type": "List String -> FormValidator.Models.Value -> FormValidator.Models.Error"
      },
      {
        "name": "isFieldInvalid",
        "comment": " Validator module wrapper. See Validator module for details. ",
        "type": "key -> FormValidator.Models.Form key -> Bool"
      },
      {
        "name": "isFloat",
        "comment": " Validators module wrapper. See Validators module for details. ",
        "type": "FormValidator.Models.Value -> FormValidator.Models.Error"
      },
      {
        "name": "isFormInvalid",
        "comment": " Validator module wrapper. See Validator module for details. ",
        "type": "FormValidator.Models.Form key -> Bool"
      },
      {
        "name": "isGreaterThan",
        "comment": " Validators module wrapper. See Validators module for details. ",
        "type": "Int -> FormValidator.Models.Value -> FormValidator.Models.Error"
      },
      {
        "name": "isIncluded",
        "comment": " Validators module wrapper. See Validators module for details. ",
        "type": "List String -> FormValidator.Models.Value -> FormValidator.Models.Error"
      },
      {
        "name": "isInteger",
        "comment": " Validators module wrapper. See Validators module for details. ",
        "type": "FormValidator.Models.Value -> FormValidator.Models.Error"
      },
      {
        "name": "isLengthGreaterThanEqualTo",
        "comment": " Validators module wrapper. See Validators module for details. ",
        "type": "Int -> FormValidator.Models.Value -> FormValidator.Models.Error"
      },
      {
        "name": "isLengthLessThanEqualTo",
        "comment": " Validators module wrapper. See Validators module for details. ",
        "type": "Int -> FormValidator.Models.Value -> FormValidator.Models.Error"
      },
      {
        "name": "isLessThan",
        "comment": " Validators module wrapper. See Validators module for details. ",
        "type": "Int -> FormValidator.Models.Value -> FormValidator.Models.Error"
      },
      {
        "name": "updateAndValidateValue",
        "comment": " Validator module wrapper. See Validator module for details. ",
        "type": "key -> FormValidator.Models.Value -> FormValidator.Models.Form key -> FormValidator.Models.Form key"
      },
      {
        "name": "updateAndValidateValues",
        "comment": " Validator module wrapper. See Validator module for details. ",
        "type": "key -> FormValidator.Models.Values -> FormValidator.Models.Form key -> FormValidator.Models.Form key"
      },
      {
        "name": "updateValue",
        "comment": " Validator module wrapper. See Validator module for details. ",
        "type": "key -> FormValidator.Models.Value -> FormValidator.Models.Form key -> FormValidator.Models.Form key"
      },
      {
        "name": "updateValues",
        "comment": " Validator module wrapper. See Validator module for details. ",
        "type": "key -> FormValidator.Models.Values -> FormValidator.Models.Form key -> FormValidator.Models.Form key"
      },
      {
        "name": "validateField",
        "comment": " Validator module wrapper. See Validator module for details. ",
        "type": "key -> FormValidator.Models.Form key -> FormValidator.Models.Form key"
      },
      {
        "name": "validateForm",
        "comment": " Validator module wrapper. See Validator module for details. ",
        "type": "FormValidator.Models.Form key -> FormValidator.Models.Form key"
      },
      {
        "name": "viewError",
        "comment": " Views module wrapper. See Views module for details. ",
        "type": "FormValidator.Models.Error -> Html.Html message"
      },
      {
        "name": "viewErrors",
        "comment": " Views module wrapper. See Views module for details. ",
        "type": "FormValidator.Models.Errors -> Html.Html message"
      },
      {
        "name": "viewField",
        "comment": " Views module wrapper. See Views module for details. ",
        "type": "key -> FormValidator.Models.Form key -> List String -> List (Html.Html message) -> Html.Html message"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]