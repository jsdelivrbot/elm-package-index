[
  {
    "name": "Css",
    "comment": " A library to create and use css stylesheets in Elm.\n\n# Type Definitions\n@docs Node\n\n# Constructors\n@docs stylesheet, assign, declare, declares\n\n# Html Elements\n@docs style\n\n# Operators\n@docs (:-), (=>), (==>)\n",
    "aliases": [
      {
        "name": "Node",
        "comment": " Css node. It can be a Rule, an @Rule, a SelectorGroup, a Declaration etc...\n",
        "args": [],
        "type": "String"
      }
    ],
    "types": [],
    "values": [
      {
        "name": ":-",
        "comment": " For Property :- Value. Alias of assign.\n",
        "type": "Css.Node -> Css.Node -> Css.Node"
      },
      {
        "name": "==>",
        "comment": " For [Selector] ==> [Declaration]. Alias of declares.\n",
        "type": "List Css.Node -> List Css.Node -> Css.Node"
      },
      {
        "name": "=>",
        "comment": " For Node => [Node]. Alias of declare.\n",
        "type": "Css.Node -> List Css.Node -> Css.Node"
      },
      {
        "name": "assign",
        "comment": " Returns a Declaration from a property and a value.\n",
        "type": "Css.Node -> Css.Node -> Css.Node"
      },
      {
        "name": "declare",
        "comment": " Returns a Node from a head and a body.\n",
        "type": "Css.Node -> List Css.Node -> Css.Node"
      },
      {
        "name": "declares",
        "comment": " Returns a Rule from a list of selectors and a list of declarations.\n",
        "type": "List Css.Node -> List Css.Node -> Css.Node"
      },
      {
        "name": "style",
        "comment": " Html style tag.\n",
        "type": "List (Html.Attribute msg) -> List (Html.Html msg) -> Html.Html msg"
      },
      {
        "name": "stylesheet",
        "comment": " Returns an Html Style Element from a list of nodes.\n",
        "type": "List Css.Node -> Html.Html msg"
      }
    ],
    "generated-with-elm-version": "0.17.1"
  }
]